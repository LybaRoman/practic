{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin_\\\\Desktop\\\\f\\\\my-app\\\\src\\\\components\\\\UserList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport UserItem from './UserItem/UserItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('https://dummyjson.com/users').then(res => res.json()).then(data => setUsers(data.users)).catch(error => console.error('Помилка:', error));\n  }, []);\n  const handleStop = (e, data, index) => {\n    // В даному випадку, просто оновлюємо позицію елемента в масиві.\n    // Для більш складних варіантів, треба було б зробити оновлення збереження порядку.\n    const newUsers = [...users];\n    newUsers[index] = {\n      ...newUsers[index],\n      position: {\n        x: data.x,\n        y: data.y\n      }\n    };\n    setUsers(newUsers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center w-[500px] border border-black mx-auto rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"py-7 text-3xl text-center\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(UserItem, {\n          id: user.id,\n          userName: user.firstName,\n          userLastName: user.lastName,\n          age: user.age\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","UserItem","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","fetch","then","res","json","data","catch","error","console","handleStop","e","index","newUsers","position","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","userName","firstName","userLastName","lastName","age","_c","$RefreshReg$"],"sources":["C:/Users/Admin_/Desktop/f/my-app/src/components/UserList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport UserItem from './UserItem/UserItem';\r\n\r\ninterface User {\r\n    id: number;\r\n    firstName: string;\r\n    lastName: string;\r\n    age: number;\r\n}\r\n\r\nconst UserList: React.FC = () => {\r\n    const [users, setUsers] = useState<User[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://dummyjson.com/users')\r\n            .then(res => res.json())\r\n            .then(data => setUsers(data.users as User[]))\r\n            .catch(error => console.error('Помилка:', error));\r\n    }, []);\r\n\r\n    const handleStop = (e: any, data: any, index: number) => {\r\n        // В даному випадку, просто оновлюємо позицію елемента в масиві.\r\n        // Для більш складних варіантів, треба було б зробити оновлення збереження порядку.\r\n        const newUsers = [...users];\r\n        newUsers[index] = {\r\n            ...newUsers[index],\r\n            position: { x: data.x, y: data.y }\r\n        };\r\n        setUsers(newUsers);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center w-[500px] border border-black mx-auto rounded-lg\">\r\n            <h1 className='py-7 text-3xl text-center'>Users</h1>\r\n            <ul>\r\n                {users.map((user, index) => (\r\n                    <li key={user.id}>\r\n                        <UserItem\r\n                            id={user.id}\r\n                            userName={user.firstName}\r\n                            userLastName={user.lastName}\r\n                            age={user.age}\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACN,KAAe,CAAC,CAAC,CAC5CO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGA,CAACC,CAAM,EAAEL,IAAS,EAAEM,KAAa,KAAK;IACrD;IACA;IACA,MAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAAC;IAC3Ba,QAAQ,CAACD,KAAK,CAAC,GAAG;MACd,GAAGC,QAAQ,CAACD,KAAK,CAAC;MAClBE,QAAQ,EAAE;QAAEC,CAAC,EAAET,IAAI,CAACS,CAAC;QAAEC,CAAC,EAAEV,IAAI,CAACU;MAAE;IACrC,CAAC;IACDf,QAAQ,CAACY,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIhB,OAAA;IAAKoB,SAAS,EAAC,+EAA+E;IAAAC,QAAA,gBAC1FrB,OAAA;MAAIoB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDzB,OAAA;MAAAqB,QAAA,EACKlB,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEZ,KAAK,kBACnBf,OAAA;QAAAqB,QAAA,eACIrB,OAAA,CAACF,QAAQ;UACL8B,EAAE,EAAED,IAAI,CAACC,EAAG;UACZC,QAAQ,EAAEF,IAAI,CAACG,SAAU;UACzBC,YAAY,EAAEJ,IAAI,CAACK,QAAS;UAC5BC,GAAG,EAAEN,IAAI,CAACM;QAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC,GANGE,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACvB,EAAA,CAtCID,QAAkB;AAAAiC,EAAA,GAAlBjC,QAAkB;AAwCxB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}